#!/bin/bash

red=`tput setaf 1`
green=`tput setaf 6`
reset=`tput sgr0`

echo "${green}Updating vim plug${reset}"
curl -fLo ~/.vim/autoload/plug.vim --create-dirs https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
# To update the plugins just run :PlugUpdate

echo "${green}Updating XVim${reset}"
if [[ -e "$HOME/.dotfiles/bin/xvim" ]]; then
  cd "$HOME/.dotfiles/bin/xvim"
  if [[ $(git pull) != "Already up-to-date." ]]; then
    make
  fi
else
  cd "$HOME/.dotfiles/bin"
  git clone git@github.com:XVimProject/XVim.git
  make
fi

if [[ $(groups | grep -q -e '\badmin\b')$? -ne 0 ]]; then
  read -p "Enter the administrator username: " admin
else
  admin=$(whoami)
fi

echo "${green}Updating usbkill${reset}"
if [[ -e "$HOME/.dotfiles/bin/usbkill" ]]; then
  cd "$HOME/.dotfiles/bin/usbkill"
  if [[ $(git pull) != "Already up-to-date." ]]; then
    sudo -u $admin sudo python setup.py install
  fi
else
  cd "$HOME/.dotfiles/bin"
  git clone git@github.com:hephaest0s/usbkill.git
  sudo -u $admin sudo python setup.py install
fi

if [[ -e "$HOME/tools" ]]; then
  echo "${green}Updating fuzzdb${reset}"
  if [[ -e "$HOME/tools/burp/fuzzdb" ]]; then
    cd "$HOME/tools/burp/fuzzdb"
    git pull
  else
    cd "$HOME/tools/burp"
    git clone git@github.com:fuzzdb-project/fuzzdb.git
  fi
fi

echo; echo "${green}Running brew update, upgrade, cleanup and checkup${reset}"
sudo -H -u $admin brew update
sudo -H -u $admin brew upgrade --all
sudo -H -u $admin brew upgrade brew-cask
sudo -H -u $admin brew cleanup
sudo -H -u $admin brew cask cleanup
sudo -H -u $admin brew doctor

echo; echo "${green}Updating pip and pip packages${reset}"
sudo -H -u $admin pip install --upgrade pip setuptools
sudo -H -u $admin pip3 install --upgrade pip setuptools
if [[ $(pip list | grep -F 'pyobjc (' >/dev/null 2>&1) -eq 0 ]]; then
  echo; echo "${green}Updating pyobjc${reset}"
  sudo -H -su $admin "pip install -U pyobjc"
fi
if [[ $(pip3 list | grep -F "peewee (" >/dev/null 2>&1) -eq 0 ]]; then
  echo; echo "${green}Updating peewee${reset}"
  sudo -H -su $admin "pip3 install -U peewee"
fi
if [[ $(pip list | grep -F "pycrypto (" >/dev/null 2>&1) -eq 0 ]]; then
  echo; echo "${green}Updating pycrypto${reset}"
  sudo -H -su $admin "pip install -U pycrypto"
fi

if [[ -e "$HOME/.bash" && -e "$HOME/.dotfiles/copy/.bash" ]]; then
  echo; echo "${green}Backing up various bash scripts${reset}"
  cp -R $HOME/.bash/* $HOME/.dotfiles/copy/.bash/ 
fi

if [[ -e "$HOME/.config/profanity" ]]; then
  echo; echo "${green}Backing up Profanity settings${reset}"
  cp -R $HOME/.config/profanity/* $HOME/.dotfiles/conf/local/profanity/ 
fi

if [[ -e "$HOME/.local/share/profanity" ]]; then
  cp -R $HOME/.local/share/profanity/* $HOME/.dotfiles/conf/local/profanity/local/
fi

if [[ -e /usr/bin/vagrant ]]; then 
  echo; echo "${green}Updating Vagrant VMWare plugin${reset}"
  vagrant plugin install vagrant-vmware-fusion
fi

if [[ -e "$HOME/.dotfiles/bin/update_local" ]]; then
  source "$HOME/.dotfiles/bin/update_local"
fi

if [[ -e "/Volumes/disk3" ]]; then
  echo; echo "${green}Updating dotfiles (locally)${reset}"
  rsync -ar --executability --delete --stats $HOME/.dotfiles/ /Volumes/disk3/.dotfiles
  #echo; echo "Updating pso"
  #rsync -ar --executability --delete --stats $HOME/resources/ /Volumes/disk3/pso
  echo; echo "${green}Updating rsrch${reset}"
  rsync -ar --executability --delete --stats $HOME/research/ /Volumes/disk3/rsrch
  echo; read -p "Update mail store? [Y/n] " yn
  if [[ $yn == [Yy] ]]; then
    echo; echo "${green}Updating mail${reset}"
    rsync -ar --executability --delete --stats $HOME/.mail/ /Volumes/disk3/.mail
  fi
fi

echo; echo "${green}Running Apple's Software Update Tool...${reset}"
sudo softwareupdate --install --all --verbose
