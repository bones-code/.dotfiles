#!/bin/bash

echo 'Updating vim plugins'
cd "$HOME/.dotfiles/link/.vim/bundle"
for i in `ls`; do
  echo $i
  cd "$i"
  git pull
  cd ..
  echo
done

echo 'Updating fuzzdb'
if [[ -e "$HOME/tools/burp/fuzzdb" ]]; then
  cd "$HOME/tools/burp/fuzzdb"
  git pull
else
  cd "$HOME/tools/burp"
  git clone git@github.com:fuzzdb-project/fuzzdb.git
fi

echo 'Updating dirbuster-ng'
if [[ -e "$HOME/.dotfiles/bin/dirbuster-ng/build" ]]; then
  cd "$HOME/.dotfiles/bin/dirbuster-ng"
  git pull
  cd build
  cmake ..
  make install
else
  cd "$HOME/.dotfiles/bin"
  git clone git@github.com:digination/dirbuster-ng.git
  cd dirbuster-ng; mkdir build; cd build
  cmake ..
  make install
fi

echo; echo 'Running brew update, upgrade, cleanup and checkup'
brew update && brew upgrade --all && brew upgrade brew-cask 
brew cleanup && brew cask cleanup && brew doctor

echo; echo 'Updating pip and pip packages'
pip install --upgrade pip setuptools
pip install -U pyobjc
pip install -U pycrypto
pip3 install -U peewee

echo; echo 'Updating karabiner/seil sets'
/Applications/Karabiner.app/Contents/Library/bin/karabiner export > "$HOME/.dotfiles/conf/osx/key-bindings/karabiner-import.sh"
/Applications/Seil.app/Contents/Library/bin/seil export > "$HOME/.dotfiles/conf/osx/key-bindings/seil-import.sh"

if [[ -e "$HOME/.config/profanity" ]]; then
  echo; echo "Backing up Profanity settings"
  cp -R $HOME/.config/profanity/* $HOME/.dotfiles/conf/local/profanity/ 
fi

if [[ -e "$HOME/.local/share/profanity" ]]; then
  cp -R $HOME/.local/share/profanity/* $HOME/.dotfiles/conf/local/profanity/local/
fi

if [[ -e /usr/bin/vagrant ]]; then 
  echo; echo "Updating Vagrant VMWare plugin"
  vagrant plugin install vagrant-vmware-fusion
fi

if [[ -e "$HOME/.dotfiles/bin/update_local" ]]; then
  source "$HOME/.dotfiles/bin/update_local"
fi

echo; echo "Running Apple's Software Update Tool..."
sudo softwareupdate --install --all
